name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check code formatting
        run: bun run format:check

      - name: Run ESLint
        run: bun run lint

      - name: Check TypeScript
        run: bun run typecheck

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build
        env:
          # Provide dummy values for build-time environment variables
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          AUTH_SECRET: dummy-secret-for-build
          GEMINI_API_KEY: dummy-key-for-build

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb', '**/package.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb', '**/package.json') }}-

  database-check:
    name: Database Schema Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate Drizzle migrations
        run: bun run db:generate

      - name: Check for uncommitted migration changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "❌ Database schema changes detected but migrations not committed!"
            echo "Please run 'bun run db:generate' and commit the changes."
            git status
            exit 1
          else
            echo "✅ Database migrations are up to date"
          fi
