name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1
  NODE_OPTIONS: '--max-old-space-size=4096'

jobs:
  quality:
    name: Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      cache-key: ${{ steps.cache.outputs.key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Prettier (code only)
        run: |
          echo "üé® Checking formatting for code paths..."
          bunx -y prettier@3.4.2 --check "src/**/*.{ts,tsx,js,jsx,css,scss,md,mdx,json}" || (echo "‚ùå Formatting issues in code paths" && exit 1)

      - name: ESLint
        run: bun run lint

      - name: TypeScript
        run: bun run typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: quality
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            node_modules
          key: ${{ needs.quality.outputs.cache-key }}

      - name: Build application
        run: bun run build
