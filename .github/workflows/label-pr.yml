name: Label PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  label:
    name: Auto-label PRs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Label based on file changes
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

      - name: Add size labels
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: "size: xs"
          xs_max_size: 10
          s_label: "size: s"
          s_max_size: 100
          m_label: "size: m"
          m_max_size: 500
          l_label: "size: l"
          l_max_size: 1000
          xl_label: "size: xl"
          message_if_xl: "This PR is quite large. Consider breaking it down into smaller PRs for easier review."

      - name: Add type labels based on branch name
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const labels = [];

            if (branchName.startsWith('feature/')) {
              labels.push('type: feature');
            } else if (branchName.startsWith('fix/') || branchName.startsWith('hotfix/')) {
              labels.push('type: bugfix');
            } else if (branchName.startsWith('chore/')) {
              labels.push('type: chore');
            } else if (branchName.startsWith('docs/')) {
              labels.push('type: documentation');
            } else if (branchName.startsWith('refactor/')) {
              labels.push('type: refactor');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }
