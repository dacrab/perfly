name: Auto-format PR

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  format:
    name: Auto-format code
    runs-on: ubuntu-latest
    # Only run on PRs when someone comments "/format"
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/format')

    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              head_ref: pr.data.head.ref,
              head_sha: pr.data.head.sha,
              base_ref: pr.data.base.ref,
              head_repo_full_name: pr.data.head.repo.full_name
            };

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ fromJson(steps.pr.outputs.result).head_ref }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run Prettier
        run: bun run format

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "ðŸŽ¨ Auto-format code with Prettier"
          git push

      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            const hasChanges = '${{ steps.changes.outputs.has_changes }}' === 'true';
            const reaction = hasChanges ? '+1' : 'eyes';

            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: reaction
            });

            if (hasChanges) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'âœ… Code has been automatically formatted with Prettier!'
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'ðŸ‘€ No formatting changes needed - code is already properly formatted!'
              });
            }
