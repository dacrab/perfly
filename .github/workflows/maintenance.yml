name: Maintenance

on:
  schedule:
    # Daily at 6 AM UTC
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      force_cleanup:
        description: 'Force cleanup of old resources'
        required: false
        type: boolean
        default: false

concurrency:
  group: maintenance
  cancel-in-progress: false

env:
  FORCE_COLOR: 1

jobs:
  # 🔍 Security and dependency audit
  audit:
    name: 🔍 Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      critical-vulns: ${{ steps.audit.outputs.critical-count }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Security audit
        id: audit
        run: |
          echo "🔍 Running security audit..."
          
          if bun audit --json > audit-results.json 2>&1; then
            echo "✅ No vulnerabilities found"
            echo "critical-count=0" >> $GITHUB_OUTPUT
          else
            # Count critical/high vulnerabilities
            CRITICAL_COUNT=$(jq -r '[.advisories[] | select(.severity == "critical")] | length' audit-results.json 2>/dev/null || echo "0")
            HIGH_COUNT=$(jq -r '[.advisories[] | select(.severity == "high")] | length' audit-results.json 2>/dev/null || echo "0")
            
            echo "critical-count=$CRITICAL_COUNT" >> $GITHUB_OUTPUT
            
            echo "📊 Vulnerability Summary:"
            echo "  - Critical: $CRITICAL_COUNT"
            echo "  - High: $HIGH_COUNT"
            
            if [[ "$CRITICAL_COUNT" -gt 0 || "$HIGH_COUNT" -gt 0 ]]; then
              echo "❌ High or critical vulnerabilities found!"
              jq -r '.advisories[] | select(.severity == "high" or .severity == "critical") | "- \(.title) (\(.severity))"' audit-results.json 2>/dev/null || echo "Unable to parse vulnerability details"
            else
              echo "ℹ️ Only low/moderate vulnerabilities found"
            fi
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit
          path: audit-results.json
          retention-days: 30
        continue-on-error: true

  # 🧹 Cleanup old resources
  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Cleanup old workflow runs
        uses: actions/github-script@v8
        with:
          script: |
            const force = '${{ github.event.inputs.force_cleanup }}' === 'true';
            const retentionDays = force ? 7 : 30;
            
            console.log(`🧹 Cleaning up workflow runs older than ${retentionDays} days...`);
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
            
            let deletedCount = 0;
            let page = 1;
            
            while (page <= 5) { // Limit pages to prevent timeout
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100,
                page: page,
                status: 'completed'
              });
              
              if (runs.workflow_runs.length === 0) break;
              
              for (const run of runs.workflow_runs) {
                const runDate = new Date(run.created_at);
                
                if (runDate < cutoffDate) {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    deletedCount++;
                  } catch (error) {
                    console.log(`Failed to delete run ${run.id}: ${error.message}`);
                  }
                }
              }
              
              page++;
            }
            
            console.log(`✅ Cleaned up ${deletedCount} old workflow runs`);

      - name: Cleanup old artifacts
        uses: actions/github-script@v8
        with:
          script: |
            const force = '${{ github.event.inputs.force_cleanup }}' === 'true';
            const retentionDays = force ? 1 : 7;
            
            console.log(`🧹 Cleaning up artifacts older than ${retentionDays} days...`);
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
            
            const { data: artifacts } = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            let deletedCount = 0;
            
            for (const artifact of artifacts.artifacts) {
              const createdAt = new Date(artifact.created_at);
              
              if (createdAt < cutoffDate) {
                try {
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id
                  });
                  deletedCount++;
                } catch (error) {
                  console.log(`Failed to delete artifact ${artifact.name}: ${error.message}`);
                }
              }
            }
            
            console.log(`✅ Cleaned up ${deletedCount} old artifacts`);

  # 📊 Generate report
  report:
    name: 📊 Report
    runs-on: ubuntu-latest
    needs: [audit, cleanup]
    if: always()
    
    steps:
      - name: Generate maintenance report
        run: |
          echo "📊 Maintenance Report"
          echo "===================="
          echo "📅 Date: $(date -u +%Y-%m-%d)"
          echo "📦 Repository: ${{ github.repository }}"
          echo ""
          
          AUDIT_STATUS="${{ needs.audit.result }}"
          CLEANUP_STATUS="${{ needs.cleanup.result }}"
          CRITICAL_VULNS="${{ needs.audit.outputs.critical-vulns || '0' }}"
          
          echo "📋 Results:"
          echo "  - Security Audit: $AUDIT_STATUS"
          echo "  - Cleanup: $CLEANUP_STATUS"
          echo "  - Critical Vulnerabilities: $CRITICAL_VULNS"
          
          if [[ "$CRITICAL_VULNS" -gt 0 ]]; then
            echo ""
            echo "🚨 CRITICAL: Security vulnerabilities detected!"
            echo "Review the audit results and update dependencies immediately."
          elif [[ "$AUDIT_STATUS" == "success" && "$CLEANUP_STATUS" == "success" ]]; then
            echo ""
            echo "✅ All maintenance tasks completed successfully"
          else
            echo ""
            echo "⚠️ Some maintenance tasks encountered issues"
          fi

      - name: Create security issue for critical vulnerabilities
        if: needs.audit.outputs.critical-vulns > 0
        uses: actions/github-script@v8
        with:
          script: |
            const criticalCount = '${{ needs.audit.outputs.critical-vulns }}';
            
            const title = `🚨 Critical Security Vulnerabilities Detected (${criticalCount})`;
            
            const body = `## 🚨 Security Alert: Critical Vulnerabilities Detected
            
            Our automated security audit has detected **${criticalCount}** critical vulnerabilities that require immediate attention.
            
            ### 🔧 Required Actions
            1. Review the detailed audit report in the workflow artifacts
            2. Update vulnerable dependencies immediately
            3. Test the application after updates
            4. Close this issue once resolved
            
            ### 📋 Resources
            - [Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [Security Guidelines](${context.payload.repository.html_url}/blob/main/docs/SECURITY.md)
            
            **Priority**: 🔴 **CRITICAL** - Address within 24 hours
            
            ---
            
            _This issue was automatically created by the maintenance workflow._`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'critical', 'dependencies']
            });
            
            console.log('🚨 Created critical security issue');
        continue-on-error: true