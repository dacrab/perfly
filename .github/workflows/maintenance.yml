name: Maintenance

on:
  schedule:
    # Daily at 6 AM UTC
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      force_cleanup:
        description: 'Force cleanup of old resources'
        required: false
        type: boolean
        default: false

concurrency:
  group: maintenance
  cancel-in-progress: false

env:
  FORCE_COLOR: 1

jobs:
  # 🔧 Complete Maintenance Pipeline
  maintenance:
    name: 🔧 Maintenance Pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 8
    outputs:
      critical-vulns: ${{ steps.maintenance.outputs.critical-vulns }}
      high-vulns: ${{ steps.maintenance.outputs.high-vulns }}
      has-vulnerabilities: ${{ steps.maintenance.outputs.has-vulnerabilities }}
      cleanup-runs: ${{ steps.maintenance.outputs.cleanup-runs }}
      cleanup-artifacts: ${{ steps.maintenance.outputs.cleanup-artifacts }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run Maintenance Pipeline
        id: maintenance
        uses: ./.github/actions/maintenance
        with:
          force-cleanup: ${{ github.event.inputs.force_cleanup }}

  # 📊 Generate report and handle security issues
  report:
    name: 📊 Report & Security
    runs-on: ubuntu-latest
    needs: maintenance
    if: always()
    
    steps:
      - name: Generate maintenance report
        run: |
          echo "📊 Maintenance Report" >> $GITHUB_STEP_SUMMARY
          echo "====================" >> $GITHUB_STEP_SUMMARY
          echo "📅 Date: $(date -u +%Y-%m-%d)" >> $GITHUB_STEP_SUMMARY
          echo "📦 Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          MAINTENANCE_STATUS="${{ needs.maintenance.result }}"
          CRITICAL_VULNS="${{ needs.maintenance.outputs.critical-vulns || '0' }}"
          HIGH_VULNS="${{ needs.maintenance.outputs.high-vulns || '0' }}"
          CLEANUP_RUNS="${{ needs.maintenance.outputs.cleanup-runs || '0' }}"
          CLEANUP_ARTIFACTS="${{ needs.maintenance.outputs.cleanup-artifacts || '0' }}"
          
          echo "📋 Results:" >> $GITHUB_STEP_SUMMARY
          echo "  - Maintenance Pipeline: $MAINTENANCE_STATUS" >> $GITHUB_STEP_SUMMARY
          echo "  - Critical Vulnerabilities: $CRITICAL_VULNS" >> $GITHUB_STEP_SUMMARY
          echo "  - High Vulnerabilities: $HIGH_VULNS" >> $GITHUB_STEP_SUMMARY
          echo "  - Workflow Runs Cleaned: $CLEANUP_RUNS" >> $GITHUB_STEP_SUMMARY
          echo "  - Artifacts Cleaned: $CLEANUP_ARTIFACTS" >> $GITHUB_STEP_SUMMARY
          
          if [[ "$CRITICAL_VULNS" -gt 0 ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚨 CRITICAL: Security vulnerabilities detected!" >> $GITHUB_STEP_SUMMARY
            echo "Review the audit results and update dependencies immediately." >> $GITHUB_STEP_SUMMARY
          elif [[ "$HIGH_VULNS" -gt 0 ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ HIGH: Security vulnerabilities detected!" >> $GITHUB_STEP_SUMMARY
            echo "Review the audit results and plan dependency updates." >> $GITHUB_STEP_SUMMARY
          elif [[ "$MAINTENANCE_STATUS" == "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ All maintenance tasks completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ Some maintenance tasks encountered issues" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create security issue for critical vulnerabilities
        if: needs.maintenance.outputs.critical-vulns > 0
        uses: actions/github-script@v8
        with:
          script: |
            const criticalCount = '${{ needs.maintenance.outputs.critical-vulns }}';
            const highCount = '${{ needs.maintenance.outputs.high-vulns }}';
            
            const title = `🚨 Critical Security Vulnerabilities Detected (${criticalCount})`;
            
            const body = `## 🚨 Security Alert: Critical Vulnerabilities Detected
            
            Our automated security audit has detected **${criticalCount}** critical and **${highCount}** high severity vulnerabilities that require immediate attention.
            
            ### 🔧 Required Actions
            1. Review the detailed audit report in the workflow artifacts
            2. Update vulnerable dependencies immediately
            3. Test the application after updates
            4. Close this issue once resolved
            
            ### 📋 Resources
            - [Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [Security Guidelines](${context.payload.repository.html_url}/blob/main/docs/SECURITY.md)
            
            **Priority**: 🔴 **CRITICAL** - Address within 24 hours
            
            ---
            
            _This issue was automatically created by the maintenance workflow._`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'critical', 'dependencies']
            });
            
            console.log('🚨 Created critical security issue');
        continue-on-error: true