name: Performance Monitoring

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run performance tests weekly
    - cron: "0 4 * * 1"

jobs:
  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          AUTH_SECRET: dummy-secret-for-build
          GEMINI_API_KEY: dummy-key-for-build

      - name: Start application
        run: bun start &
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          AUTH_SECRET: dummy-secret-for-build
          GEMINI_API_KEY: dummy-key-for-build

      - name: Wait for server
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/auth
          configPath: "./lighthouserc.json"
          uploadArtifacts: true
          temporaryPublicStorage: true

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Analyze bundle size
        run: |
          bun run build

          # Check if build output exists
          if [ -d ".next" ]; then
            echo "üì¶ Build output size:"
            du -sh .next/
            
            echo ""
            echo "üìä Largest files in build:"
            find .next -name "*.js" -type f -exec du -h {} + | sort -rh | head -10
            
            echo ""
            echo "üîç Bundle composition:"
            ls -la .next/static/chunks/ | head -20
          else
            echo "‚ùå Build output not found"
            exit 1
          fi
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          AUTH_SECRET: dummy-secret-for-build
          GEMINI_API_KEY: dummy-key-for-build
