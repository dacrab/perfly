name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - 'production'
          - 'staging'
        default: 'production'
      skip_checks:
        description: 'Skip checks (emergency only)'
        required: false
        type: boolean
        default: false

concurrency:
  group: deploy-${{ github.event.inputs.environment }}
  cancel-in-progress: false

env:
  FORCE_COLOR: 1
  NODE_OPTIONS: '--max-old-space-size=4096'
  # Build environment variables
  DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
  AUTH_SECRET: dummy-secret-for-build
  GEMINI_API_KEY: dummy-key-for-build
  AUTH_ORIGIN: http://localhost:3000
  RESEND_API_KEY: dummy-resend-key
  GITHUB_CLIENT_ID: dummy-github-id
  GITHUB_CLIENT_SECRET: dummy-github-secret

jobs:
  # 🚀 Deploy to target environment
  deploy:
    name: 🚀 Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Validate deployment
        run: |
          echo "🚀 Manual Deployment Request" >> $GITHUB_STEP_SUMMARY
          echo "============================" >> $GITHUB_STEP_SUMMARY
          echo "👤 Requested by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "🌍 Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "📦 Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Skip checks: ${{ github.event.inputs.skip_checks }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event.inputs.skip_checks }}" == "true" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚨 WARNING: Quality checks will be skipped!" >> $GITHUB_STEP_SUMMARY
            echo "This should only be used for emergency deployments." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Checkout
        uses: actions/checkout@v5

      - name: Run Deployment Pipeline
        uses: ./.github/actions/deploy
        with:
          environment: ${{ github.event.inputs.environment }}
          skip-checks: ${{ github.event.inputs.skip_checks }}

      - name: Create deployment notification
        uses: actions/github-script@v8
        with:
          script: |
            const environment = '${{ github.event.inputs.environment }}';
            const skippedChecks = '${{ github.event.inputs.skip_checks }}' === 'true';
            
            const title = `🚀 Manual Deployment to ${environment}${skippedChecks ? ' ⚠️' : ''}`;
            
            const body = `## ${title}
            
            **Deployment Details:**
            - **Environment**: ${environment}
            - **Commit**: \`${{ github.sha }}\`
            - **Deployed by**: @${{ github.actor }}
            - **Timestamp**: ${new Date().toISOString()}
            
            ${skippedChecks ? '⚠️ **Warning**: This deployment skipped quality checks.\n\n' : ''}**Status**: ✅ Deployment initiated successfully
            
            The application will be deployed via Vercel GitHub integration.
            Check your Vercel dashboard for real-time deployment status.
            
            ---
            *Workflow: [${context.runId}](${context.payload.repository.html_url}/actions/runs/${context.runId})*`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Deployment: ${environment} (${'${{ github.sha }}'.substring(0, 7)})`,
              body: body,
              labels: ['deployment', environment]
            });
        continue-on-error: true

      - name: Success notification
        run: |
          echo "🎉 Deployment Completed Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "==================================" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 Summary:" >> $GITHUB_STEP_SUMMARY
          echo "  - Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "  - Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "  - Status: ✅ Success" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "  - Monitor deployment in Vercel dashboard" >> $GITHUB_STEP_SUMMARY
          echo "  - Verify application is working correctly" >> $GITHUB_STEP_SUMMARY
          echo "  - Check performance metrics" >> $GITHUB_STEP_SUMMARY

      - name: Failure notification
        if: failure()
        run: |
          echo "❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "====================" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔄 Troubleshooting:" >> $GITHUB_STEP_SUMMARY
          echo "  - Check the workflow logs above" >> $GITHUB_STEP_SUMMARY
          echo "  - Verify all secrets are configured" >> $GITHUB_STEP_SUMMARY
          echo "  - Ensure code quality checks pass" >> $GITHUB_STEP_SUMMARY
          echo "  - Try again with 'skip_checks' if emergency" >> $GITHUB_STEP_SUMMARY
